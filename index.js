import 'dotenv/config';
import qrcode from 'qrcode-terminal';
import cron from 'node-cron';
import pkg from 'whatsapp-web.js';
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const chatHistory = {};
const { Client, LocalAuth, MessageMedia } = pkg;

// Pour g√©rer __dirname en ES Modules
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

//==================================================== MESSAGES ======================================================//
const messages = [
  "üìå Tips du jour : üìö Un mod√®le de classification, c‚Äôest comme un gardien qui voit une image et dit : 'toi üê∂ √† gauche, toi üê± √† droite'. Il apprend √ßa avec des exemples !",
  "üìå Tips du jour : üß† L‚Äôintelligence artificielle, c‚Äôest un cerveau num√©rique qui apprend comme toi en cours : plus il voit, plus il comprend !",
  "üìå Tips du jour : ü§ñ Le machine learning, c‚Äôest quand un ordi apprend √† reconna√Ætre des choses sans qu‚Äôon lui explique chaque d√©tail. Comme deviner le h√©ros d‚Äôun film juste avec une sc√®ne !",
  "üìå Tips du jour : üß¨ Un neurone artificiel, c‚Äôest une mini-calculette. Plein ensemble ? √áa donne un super cerveau IA üí°",
  "üìå Tips du jour : üí§ L‚ÄôIA ne dort jamais, mais elle a besoin de donn√©es comme toi d‚Äôentra√Ænement. Pas de data = pas de progr√®s üìâ",
  "üìå Tips du jour : üëÅÔ∏è La vision par ordinateur, c‚Äôest des yeux pour les machines. Montre-lui un chat üêà, elle dit 'chat'. Show must go on !",
  "üìå Tips du jour : üî¢ L‚ÄôIA lit les chiffres comme toi un manga. Chaque chiffre cache une info üïµÔ∏è",
  "üìå Tips du jour : üèÄ En IA, on ne code pas les r√®gles, on montre des exemples. Comme apprendre le basket en regardant LeBron jouer !",
  "üìå Tips du jour : ‚ú® L‚ÄôIA, c‚Äôest pas de la magie, c‚Äôest des maths, des stats et beaucoup de tests. Mais √ßa fait des trucs incroyables !",
  "üìå Tips du jour : üé§ Tu connais Siri ou Alexa ? C‚Äôest de l‚ÄôIA qui comprend ta voix et te r√©pond. Elle √©coute mieux que ton pote parfois üòÖ",
  "üìå Tips du jour : üéº L‚ÄôIA peut composer de la musique, √©crire des po√®mes ou coder un jeu vid√©o. Elle est multi-talent comme toi !",
  "üìå Tips du jour : ‚ùå En IA, chaque erreur est une le√ßon. Les fails font progresser !",
  "üìå Tips du jour : üß† Les r√©seaux de neurones profonds, c‚Äôest un cerveau √† plusieurs √©tages. Plus y‚Äôa d‚Äô√©tages, plus c‚Äôest puissant !",
  "üìå Tips du jour : üí¨ Un chatbot, c‚Äôest un pote virtuel qui discute avec toi. Et parfois, il est tr√®s bavard üó®Ô∏è",
  "üìå Tips du jour : ‚ö° Quand tu dis 'Ok Google', l‚ÄôIA capte ta voix, comprend ta question et t‚Äôenvoie une r√©ponse plus vite que l‚Äô√©clair ‚ö°",
  "üìå Tips du jour : üíé Les donn√©es, c‚Äôest l‚Äôor num√©rique üí∞. Celui qui les comprend peut changer le monde !",
  "üìå Tips du jour : üß¨ L‚ÄôIA peut d√©tecter une maladie, corriger une photo ou pr√©dire un match. Elle analyse tout tr√®s vite !",
  "üìå Tips du jour : üßë‚Äçüíª GPT (comme moi) a lu des milliards de phrases. R√©sultat ? Je te parle comme un humain üìñ",
  "üìå Tips du jour : üîç En IA, on apprend avec ou sans correction. Supervis√© : on donne la r√©ponse. Non-supervis√© : elle devine !",
  "üìå Tips du jour : üëÇ Les robots IA voient üé•, entendent üéß et pensent avec du code üë®‚Äçüíª",
  "üìå Tips du jour : üåÄ Les GANs, ce sont des IA qui cr√©ent des visages qui n‚Äôexistent pas. Impressionnant et... myst√©rieux üëª",
  "üìå Tips du jour : üì± L‚ÄôIA dans ton tel g√®re la batterie, les filtres photo, et te propose tes meilleures apps. Smart, non ?",
  "üìå Tips du jour : üåê Apprendre l‚ÄôIA, c‚Äôest parler la langue des machines. Un vrai super-pouvoir !",
  "üìå Tips du jour : ‚ù§Ô∏è L‚ÄôIA n‚Äôa pas de c≈ìur, mais elle peut surveiller les battements du tien avec un simple capteur. #sant√©",
  "üìå Tips du jour : üöò Les voitures autonomes utilisent cam√©ras + capteurs + IA pour rouler sans pilote. Futur en marche !",
  "üìå Tips du jour : ‚è≥ En IA, il faut √™tre patient. Ton mod√®le va √©chouer, c‚Äôest normal. Il devient meilleur √† chaque essai !",
  "üìå Tips du jour : üì∫ Quand YouTube te recommande une vid√©o, c‚Äôest l‚ÄôIA qui devine ce que tu vas adorer regarder üòç",
  "üìå Tips du jour : üë©‚Äçüè´ L‚ÄôIA a besoin de toi pour apprendre. Tu es son prof, elle est ton √©l√®ve !",
  "üìå Tips du jour : üåç Tu veux changer le monde ? Apprends √† parler IA. C‚Äôest elle qui pilotera les syst√®mes de demain !",
  "üìå Tips du jour : üöÄ Pas besoin d‚Äô√™tre un g√©nie pour commencer l‚ÄôIA. Juste un peu de curiosit√© et de passion. Go go go !",
  "üìå Le savais tu ? : ü§ñ Je ne suis pas un humain mais un bot de message programmer par orax la startup de la communaut√© TTECH !"
];
//==================================================== MESSAGES ======================================================//

// const groupName = 'TTECH‚Ñ¢ |  G√©n√©ral';
const groupName = 'TTECH‚Ñ¢ |  G√©n√©ral';

const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    executablePath: process.env.PUPPETEER_EXECUTABLE_PATH,
    headless: true,
    args: ['--no-sandbox', '--disable-setuid-sandbox']
  }
});

// QR code √† scanner √† la premi√®re ex√©cution uniquement
client.on('qr', qr => {
  console.log('üì≤ Scanner ce QR code avec WhatsApp :');
  qrcode.generate(qr, { small: true });
});

client.on('ready', () => {
  console.log('‚úÖ Client WhatsApp pr√™t !');

  // Envoi quotidien √† 8h GMT
  cron.schedule('0 7 * * *', async () => {
    try {
      const message = '[ orax - bot ] ' + messages[Math.floor(Math.random() * messages.length)];
      const chats = await client.getChats();
      const group = chats.find(chat => chat.isGroup && chat.name === groupName);

      if (!group) {
        console.log(`‚ùå Groupe "${groupName}" non trouv√©.`);
        return;
      }

      // Choisir une image al√©atoire
      const mediaDir = path.join(__dirname, 'media/tips');
      const images = fs.readdirSync(mediaDir).filter(file => /\.(jpg|jpeg|png|webp)$/i.test(file));
      
      if (images.length === 0) {
        console.error('‚ùå Aucune image trouv√©e dans le dossier media.');
        return;
      }

      const randomImage = images[Math.floor(Math.random() * images.length)];
      const imagePath = path.join(mediaDir, randomImage);

      const media = MessageMedia.fromFilePath(imagePath);
      await client.sendMessage(group.id._serialized, media, { caption: message });
      console.log(`[ orax - bot ] ‚úÖ Message + image "${randomImage}" envoy√©s dans "${groupName}"`);
    } catch (err) {
      console.error('‚ùå Erreur lors de l‚Äôenvoi du message :', err);
    }
  });
});

client.on('auth_failure', msg => {
  console.error('‚ùå √âchec d‚Äôauthentification :', msg);
});

client.on('disconnected', reason => {
  console.log('üîå D√©connect√© :', reason);
});

client.initialize();

client.on('message', async message => {
  if (!message.fromMe && message.body.startsWith('!ask')) {
    const question = message.body.replace('!ask', '').trim();

    if (!question) {
      await message.reply("‚ùå Pose une vraie question apr√®s !ask");
      return;
    }

    try {
      const res = await fetch('http://localhost:11434/api/generate', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          model: 'mistral',
          prompt: question,
          stream: false
        })
      });

      const data = await res.json();
      await message.reply("[ orax - bot ]ü§ñ " + data.response.trim());
    } catch (err) {
      console.error("Erreur:", err);
      await message.reply("‚ùå Erreur en appelant Mistral.");
    }
  }else if (!message.fromMe) { // mettre tout message recu dans un fichier json
  }
});